import pymysql
from datetime import date
from Projekt_2.Main.sql_funkcie import *


#-----------------UZIVATELSKE FUNKCIE-----------------
# 4. PRIDAJ UKOL
def add_task_input(conn):
    while True:
        nazev_ukolu = input("Zadejte n√°zev √∫kolu: ").strip()
        popis_ukolu = input("Zadejte popis √∫kolu: ").strip()

        if not nazev_ukolu or not popis_ukolu:
            print("\n‚ùå N√°zev a popis mus√≠ b√Ωt vyplnƒõny.\nZkuste to znovu.\n")

        else:
            try:
                if add_task_into_db(conn, nazev_ukolu, popis_ukolu):
                    print(f"\n‚úÖ √ökol: {nazev_ukolu} byl p≈ôid√°n.")
                    break  
            except Exception as e:
                print(f"‚ùå Chyba p≈ôi p≈ôid√°v√°n√≠ √∫kolu: {e}")
              


# 5. ZOBRAZIT UKOLY
def show_all_tasks_ui(conn, tasks_all):
    try: 
        if not tasks_all:
            print("üì≠ Seznam √∫kol≈Ø je pr√°zdn√Ω.")
            return
        
        print("\nüìã Seznam v≈°ech √∫kol≈Ø:")
        for task in tasks_all:
            print(task)

        if True:
            print("\nüéØ Chcete zobrazit pouze nedokonƒçen√© √∫koly?")
            moznost_filtru = input("\t‚û§ Zadejte 'filtr' pro zobrazen√≠ nedokonƒçen√Ωch √∫kol≈Ø, nebo stisknƒõte Enter pro n√°vrat: \n").strip()
            if moznost_filtru.lower() == 'filtr':
                data_nedokoncene = get_nedokoncene_from_db(conn)
                if data_nedokoncene:
                    print("\nüìå Seznam nedokonƒçen√Ωch √∫kol≈Ø:")
                    for data in data_nedokoncene:
                        print(data)
            else:
                print("‚Ü©Ô∏è  N√°vrat bez filtrov√°n√≠.")

    except Exception as e:
        print(f"‚ùå Do≈°lo k chybƒõ: {e}")


# 6. AKTUALIZACIA UKOLU
def update_task_status_input(conn, tasks_all):
    try:

        if not tasks_all:
            print("Nen√≠ co aktualizovat.\n")
            return
        
        print("\nüìã Seznam v≈°ech √∫kol≈Ø:")
        for task in tasks_all:
            print(task)
        

        while True:
            try:
                vyber_id = int(input("\nZadejte ID √∫kolu, jeho≈æ stav chcete zmƒõnit: "))
                if not check_task_id(conn, vyber_id):
                    print("‚ùå Zadan√© ID neexistuje. Zkuste znovu.")
                    continue
                break
            except ValueError:
                print("‚ùå Zadejte platn√© ƒç√≠slo.")
                continue

        while True:
            novy_stav = input("Zadejte nov√Ω stav √∫kolu 'Prob√≠h√°' nebo 'Hotovo': ").strip()
            try:
                if update_task_status_db(conn, vyber_id, novy_stav):
                    print("‚úÖ √ökol byl √∫spƒõ≈°nƒõ aktualizov√°n.")
                    break
                else:
                    print("‚ùå Aktualizace se nezda≈ôila. Zkuste to znovu")
            except ValueError as e:
                print(f"‚ùå {e}")  # napr. neplatn√Ω stav alebo neexistuj√∫ce ID
    except pymysql.MySQLError as e:
        print(f"‚ùå{e}")
        


# 7. ZMAZANIE ULOHY 
def odstraneni_ukolu_input(conn, tasks_all):
    try:
        if not tasks_all:
            print("Nen√≠ co maza≈•.\n")
            return
      
        print("\nüìã Seznam v≈°ech √∫kol≈Ø:")
        for task in tasks_all:
            print(task)
    
        
        while True:
            try:
                vyber_id = int(input("\nZadejte ID √∫kolu, kter√Ω chcete smazat: ")) #vstup INT, tak hlaska na Value error.
                if not check_task_id(conn, vyber_id):
                    print("‚ùå Zadan√© ID neexistuje.")
                    continue
          
                potvrdenie = input(f"Opravdu chcete smazat √∫kol s ID {vyber_id}?‚ùóPro potvrzen√≠ akce napi≈°te 'ano'): ").strip().lower()
                if potvrdenie != 'ano':
                    print("‚Ü©Ô∏è  Zru≈°eno u≈æivatelem.")
                    return

                if delete_task_by_id(conn, vyber_id):
                    print("‚úÖ √ökol byl odstranƒõn.")
                else:
                    print("‚ùå Maz√°n√≠ se nezda≈ôilo.")
                break
            except ValueError:
                print("‚ùó Pros√≠m, zadejte platn√© ƒç√≠slo.")
    except ValueError as e:
        print(f"‚ùå {e}")


# 3. HLAVNE MENU
def hlavni_menu(conn):
    tasks_all = get_all_tasks_from_db(conn)

    while True:
        print("\nSpr√°vce √∫kol≈Ø - Hlavn√≠ menu")
        print("1. P≈ôidat √∫kol")
        print("2. Zobrazit v≈°echny √∫koly")
        print("3. Aktualizovat stav √∫kolu")
        print("4. Odstranit √∫kol")
        print("5. Ukonƒçit program")

        vyber_cisla=(input("Vyberte mo≈ænost (1-5):"))
                 
        if vyber_cisla == "1":
            print("\n üîπ P≈ôid√°n√≠ nov√©ho √∫kolu")
            add_task_input(conn)
            tasks_all = get_all_tasks_from_db(conn)
        elif vyber_cisla == "2":
            print("\n")
            show_all_tasks_ui(conn, tasks_all)
        elif vyber_cisla == "3":
            print("\nVolba Aktualizovat stav √∫kolu:")
            update_task_status_input(conn, tasks_all)
            tasks_all = get_all_tasks_from_db(conn)
        elif vyber_cisla == "4":
            print("\nVolba Odstranƒõn√≠ √∫kolu:")
            odstraneni_ukolu_input(conn, tasks_all)
            tasks_all = get_all_tasks_from_db(conn)
        elif vyber_cisla == "5":
            print("\nKonec programu, naschledanou.üëã\n")
            break
        else:
            print("\nZadejte spr√°vnou volbu menu.")

    
# --------SPUSTENIE
def run():
    try:
        conn = connect_to_db()
    except ConnectionError as e:
        print(f"Nelze nav√°zat spojen√≠ s datab√°z√≠: {e}")
        return
    
    table_check(conn)
    hlavni_menu(conn)

    conn.close()

if __name__ == "__main__":
    run()