import pymysql
from datetime import date

# zadanie
# Pou≈æit√≠ MySQL datab√°ze: Vytvo≈ô√≠te datab√°zovou tabulku ukoly, kter√° bude obsahovat: 
# OK - id 
# OK - nazev
# OK - popis
# OK - stav (nezah√°jeno, hotovo, prob√≠h√°)
# OK - datum vytvoreni

# ---------- Funkce programu ----------
# 1. pripojeni_db() ‚Äì P≈ôipojen√≠ k datab√°zi
# OK Funkce vytvo≈ô√≠ p≈ôipojen√≠ k MySQL datab√°zi.
# OK Pokud p≈ôipojen√≠ sel≈æe, zobraz√≠ chybovou zpr√°vu.


def pripojeni_db():
    try:
        conn = pymysql.connect(
                host="mysql80.r4.websupport.sk",
                port=3314,
                user="EsPMMROq",
                password="79_|rBg[1F=`}cj|I%kc",
                database="Task_manager_SQL"            
            )
        print("\nP≈ôipojen√≠ k datab√°zi bylo √∫spƒõ≈°n√©. Datab√°ze Task_manager_SQL je k dispozici.")
        return conn
    except pymysql.MySQLError as err:
        print(f"Chyba p≈ôi p≈ôipojov√°n√≠: {err}")

#overeni existence tabulky v databaze
def overit_existenci_tabulky(conn):
    try:
        cursor = conn.cursor()
        cursor.execute(f"SELECT 1 FROM Ukoly;") #Z tabulky se nevypisuj√≠ ≈æ√°dn√° skuteƒçn√° data, jen odpoved, ≈æe dotaz jde prov√©st.
        overenie = cursor.fetchone()
        print("‚úÖ Tabulka 'Ukoly' je aktivn√≠.")
    except pymysql.err.ProgrammingError as err:
        if "doesn't exist" in str(err):             # hladam tento retazec v errorovej hlaske, e hlaska = 1146, "Table 'Task_manager_SQL.Ukooly' doesn't exist"
            print("Tabulka 'Ukoly' neexistuje. Vytv√°≈ô√≠m ji...")
            vytvoreni_tabulky(conn)
        else:
            print(f"‚ùå Jin√° chyba p≈ôi ovƒõ≈ôov√°n√≠ tabulky: {err}")
    finally:
        cursor.close()


# 2. vytvoreni_tabulky() ‚Äì Vytvo≈ôen√≠ tabulky, pokud neexistuje
# OK - Funkce vytvo≈ô√≠ tabulku ukoly, pokud je≈°tƒõ neexistuje.
# OK - Ovƒõ≈ô√≠ existenci tabulky v datab√°zi. overit_existenci_tabulky(conn)

def vytvoreni_tabulky(conn):
    try:
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS Ukoly (
            id INT PRIMARY KEY AUTO_INCREMENT,
            nazev VARCHAR (50) NOT NULL,
            popis VARCHAR (255) NOT NULL,
            stav  ENUM ('Nezah√°jeno', 'Prob√≠h√°', 'Hotovo') NOT NULL DEFAULT 'Nezah√°jeno', 
            datum_vytvoreni DATETIME DEFAULT CURRENT_TIMESTAMP
            );
        ''')
        print("‚úÖ Tabulka 'Ukoly' je vytvo≈ôena.")
        conn.commit()
    except pymysql.MySQLError as err:
        print(f"Chyba p≈ôi vytv√°≈ôen√≠ tabulky: {err}")
    finally:
        cursor.close()


# ---- NEAKTIVNI----- pridanie prv√Ωch z√°znamov do tabulky - vzorove ukoly
def pridani_vzorovych_ukolu(conn):
    '''pridanie 2 vzorovych uloh'''
    try:
        cursor = conn.cursor()
        dnes = date.today()
        ulohy_exmpl = [
            ("√∫kol 1", "popis k √∫kolu 1", "Prob√≠h√°", dnes),
            ("√∫kol 2", "popis k √∫kolu 2", "Hotovo", dnes)
        ]
        cursor.executemany(
            "INSERT INTO Ukoly (nazev, popis, stav) VALUES (%s, %s, %s);",
            ulohy_exmpl
        )
        conn.commit()
        print("‚úÖ P≈ôid√°n√≠ vzorov√Ωch √∫kol≈Ø probƒõhlo v po≈ô√°dku")
    except pymysql.MySQLError as err:
        print(f"Chyba p≈ôi p≈ôid√°v√°n√≠ √∫kol≈Ø: {err}")
    finally:
        cursor.close()



# 3. hlavni_menu() ‚Äì Hlavn√≠ nab√≠dka
# OK  Zobraz√≠ mo≈ænosti:
# OK  1. P≈ôidat √∫kol
# OK  2. Zobrazit √∫koly
# OK  3. Aktualizovat √∫kol
# OK  4. Odstranit √∫kol
# OK  5. Ukonƒçit program
# OK  Pokud u≈æivatel zad√° ≈°patnou volbu, program ho upozorn√≠ a nech√° ho vybrat znovu.
def hlavni_menu(conn):
   
     while True:
        print("\nSpr√°vce √∫kol≈Ø - Hlavn√≠ menu")
        print("1. P≈ôidat √∫kol")
        print("2. Zobrazit v≈°echny √∫koly")
        print("3. Aktualizovat stav √∫kolu")
        print("4. Odstranit √∫kol")
        print("5. Ukonƒçit program")
        try:
            vyber_cisla=int(input("Vyberte mo≈ænost (1-5):"))
            if vyber_cisla == 1:
                print("\nP≈ôid√°n√≠ nov√©ho √∫kolu")
                pridat_ukol_sql(conn)
            elif vyber_cisla == 2:
                print("\nZobrazen√≠ v≈°ech √∫kol≈Ø:")
                zobrazit_ukoly(conn)
            elif vyber_cisla == 3:
                print("\nVolba Aktualizovat stav √∫kolu:")
                aktualizace_ukolu(conn)
            elif vyber_cisla == 4:
                print("\nVolba Odstranƒõn√≠ √∫kolu:")
                odstraneni_ukolu()
            elif vyber_cisla == 5:
                print("\nKonec programu, naschledanou.üëã\n")
                exit()
        except ValueError:
            print("\nZadejte spr√°vnou volbu menu.")

# 4. pridat_ukol() ‚Äì P≈ôid√°n√≠ √∫kolu
# OK U≈æivatel zad√° n√°zev a popis √∫kolu.
# OK Povinn√© √∫daje: N√°zev a popis jsou povinn√©, nesm√≠ b√Ωt pr√°zdn√©.
# OK - Automatick√© hodnoty:
# OK    1. √ökol dostane ID automaticky.
# OK    2. V√Ωchoz√≠ stav ukolu: Nezah√°jeno
# OK - Po splnƒõn√≠ v≈°ech podm√≠nek se √∫kol ulo≈æ√≠ do datab√°ze

def pridat_ukol_sql(conn,nazev_ukolu, popis_ukolu):
    pridat_ukol_vstupy(conn)
    cursor = conn.cursor()
    cursor.execute(
        "INSERT INTO Ukoly (nazev, popis) VALUES (%s,%s);", 
        (nazev_ukolu, popis_ukolu)
        )
    conn.commit()
    cursor.close()


def pridat_ukol_vstupy(conn, nazev: str, popis: str) -> str:
    '''Z√≠skaj vstupy od pou≈æ√≠vateƒæa a ulo≈æ √∫lohu do DB'''
    nazev = nazev.strip()
    popis = popis.strip()
    if not nazev or not popis:
        return ""
    return f"{nazev}: {popis}"  


    
    # while True: #osetrenie prazdneho vstupu
    #     nazev_ukolu = input("Zadejte n√°zev √∫kolu: ").strip()
    #     if nazev_ukolu != "":
    #         print("\nVyplnƒõn√≠ je povinn√©\n")
    #         break

    # while True:
    #    popis_ukolu = input("Zadejte popis √∫kolu: ").strip()
    #    if popis_ukolu == "":
    #         print("\nVyplnƒõn√≠ je povinn√©\n")
    #    else:
    #         break


        

# zobrazenie posledneho ukolu
    #     cursor.execute(
    #         "SELECT * From Ukoly ORDER BY id DESC LIMIT 1;"
    #         )
    #     posledny_ukol = cursor.fetchone()
    #     print(f"P≈ôidali jste nov√Ω √∫kol: {posledny_ukol}")

    
    # except pymysql.MySQLError as err:
    #     print(f"‚ùå Chyba p≈ôi ukl√°d√°n√≠ do datab√°ze: {err}")

    # finally:
    #     cursor.close()



# 5. zobrazit_ukoly() ‚Äì Zobrazen√≠ √∫kol≈Ø
# OK Seznam v≈°ech √∫kol≈Ø s informacemi: ID, n√°zev, popis, stav.
# OK Filtr: Zobraz√≠ pouze √∫koly se stavem "Nezah√°jeno" nebo "Prob√≠h√°".
# OK Pokud nejsou ≈æ√°dn√© √∫koly, zobraz√≠ informaci, ≈æe seznam je pr√°zdn√Ω.
def zobrazit_ukoly(conn):
    print("\nSeznam v≈°ech √∫kol≈Ø:") 
    cursor = conn.cursor(pymysql.cursors.DictCursor)
    cursor.execute(
        "SELECT id, nazev, popis, stav FROM Ukoly;"
        )
    ukoly_vsechny = cursor.fetchall()
    if len(ukoly_vsechny) == 0:
        print("Seznam √∫kol≈Ø je pr√°zdn√Ω")
    for ukol in ukoly_vsechny:
        print(ukol)

    try:
        vyber_filtru = input("\nChcete vyfiltrovat pouze Nedokonƒçen√© √∫koly? Napi≈°te 'ano' nebo 'ne': ").strip()
        if vyber_filtru == 'ano':
            print("\nZobrazen√≠ nedokonƒçen√Ωch √∫kol≈Ø: ")
            cursor = conn.cursor(pymysql.cursors.DictCursor)
            cursor.execute(
                "SELECT id, nazev, popis, stav FROM Ukoly WHERE stav IN ('Nezah√°jeno', 'Prob√≠h√°');"
                )
            ukoly_vyber_filter = cursor.fetchall()
            for u in ukoly_vyber_filter:
                print(u)
        elif vyber_filtru == "":
            print("\nVyplnƒõn√≠ je povinn√©")
        else:
            print("Budete p≈ôesmƒõrov√°ni do hlavn√≠ho menu.")
            return
    finally:
        cursor.close()

# 6. aktualizovat_ukol() ‚Äì Zmƒõna stavu √∫kolu
# OK U≈æivatel vid√≠ seznam √∫kol≈Ø (ID, n√°zev, stav).
# OK Vybere √∫kol podle ID.
# OK Dostane na v√Ωbƒõr nov√Ω stav: "Prob√≠h√°" nebo "Hotovo"
# OK Po potvrzen√≠ se aktualizuje DB.
# OK Pokud zad√° neexistuj√≠c√≠ ID, program ho upozorn√≠ a nech√° ho vybrat znovu.

      
#vstav dat do formatu na vyber cisla, aby to nemusel s diakritikou vyplnat. podobne ako vyber 

def aktualizace_ukolu(conn):
    print("\nSeznam √∫kol≈Ø:")
    cursor = conn.cursor(pymysql.cursors.DictCursor)
    cursor.execute(
        "SELECT id, nazev, stav FROM Ukoly;"
                )
    vsechny_ukoly_vyber = cursor.fetchall()
    for ukol_vyber in vsechny_ukoly_vyber:
        print(ukol_vyber)
    vsechna_id = [ukol['id'] for ukol in vsechny_ukoly_vyber]
    
    # Vybere √∫kol podle ID.
    while True:
        try:
            vyber_ukolu_id = int(input("\nZadejte ID √∫kolu, kter√Ω chcete upravit: ")) # musime osetrit ValueError, keby sa nezada cislo

            if vyber_ukolu_id in vsechna_id:
                print(f"K √∫pravƒõ jste vybrali √∫lohu s id {vyber_ukolu_id}.")
                cursor.execute(
                    "SELECT id, nazev, popis, stav FROM Ukoly WHERE id=%s;",
                    (vyber_ukolu_id,) #SQL parametr (vyber_ukolu_id) mus√≠ b√Ωt TUPLE (vyber_ukolu_id,)
                )
                ukazka_ukolu = cursor.fetchone()
                print(ukazka_ukolu)
                break
            else:
                print("\nZadejte spr√°vnou hodnotu id.")
        except ValueError:
            print("\n‚ùó Pros√≠m, zadejte platn√© ƒç√≠slo.")
        except pymysql.MySQLError as err:
            print(f"‚ùå Chyba p≈ôi v√Ωbƒõru id √∫kolu {err}")
            
      
    while True:
        print("\nZadejte stav √∫kolu v√Ωbƒõrem z mo≈ænost√≠: 'Prob√≠h√°', 'Hotovo'" )
        hodnoty_stavu = ['Prob√≠h√°', 'Hotovo']
        stav = input("Nov√Ω stav: ").strip()

        if  stav in hodnoty_stavu:
            cursor.execute(
                "UPDATE Ukoly SET stav = %s WHERE id = %s;", 
                ( stav, vyber_ukolu_id)
                )
            conn.commit()
            print("\n‚úÖ √ökol byl √∫spƒõ≈°nƒõ aktualizov√°n.\nNyn√≠ budete p≈ôesmƒõrov√°ni do hlavn√≠ho menu.")
            return
        else:
            print("\nZadejte spr√°vnou hodnotu pro stav")
        
    
    

# 7. odstranit_ukol() ‚Äì Odstranƒõn√≠ √∫kolu
# OK U≈æivatel vid√≠ seznam √∫kol≈Ø.
# OK Vybere √∫kol podle ID.
# OK Po potvrzen√≠ bude √∫kol trvale odstranƒõn z datab√°ze.
# OK Pokud u≈æivatel zad√° neexistuj√≠c√≠ ID, program ho upozorn√≠ a nech√° ho vybrat znovu.
def odstraneni_ukolu():    
    print("\nSeznam v≈°ech √∫kol≈Ø:") 
    cursor = conn.cursor(pymysql.cursors.DictCursor)
    cursor.execute(
        "SELECT id, nazev, popis, stav FROM Ukoly;"
        )
    ukoly_vsechny = cursor.fetchall()
    if len(ukoly_vsechny) == 0:
        print("Seznam √∫kol≈Ø je pr√°zdn√Ω")
    for ukol in ukoly_vsechny:
        print(ukol)
    vsechna_id = [ukol['id'] for ukol in ukoly_vsechny]

    while True:
        try:
            vyber_ukolu_id = int(input("\nZadejte ID √∫kolu, kter√Ω chcete smazat: ")) # musime osetrit ValueError, keby sa nezada cislo

            if vyber_ukolu_id in vsechna_id:
                print(f"K odstranƒõn√≠ jste vybrali √∫kol s id {vyber_ukolu_id}.")
                cursor.execute(
                    "DELETE FROM Ukoly WHERE id=%s;",
                    (vyber_ukolu_id,)
                )
                print("√ökol byl odstranƒõn.")
                break
            else:
                print("\nZadejte spr√°vnou hodnotu id.")
        except ValueError:
            print("\n‚ùó Pros√≠m, zadejte platn√© ƒç√≠slo.")
        except pymysql.MySQLError as err:
            print(f"‚ùå Chyba p≈ôi v√Ωbƒõru id √∫kolu {err}")

#------SPURSTENIE PROGRAMU-------

conn = pripojeni_db()
if conn:
    overit_existenci_tabulky(conn)
    hlavni_menu(conn)
    conn.close()
   